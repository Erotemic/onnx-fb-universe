ir_version: 2
producer_name: "pytorch"
producer_version: "0.3"
graph {
  node {
    input: "0"
    input: "1"
    output: "3"
    op_type: "Conv"
    attribute {
      name: "kernel_shape"
      ints: 2
      ints: 2
      ints: 2
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      ints: 2
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "group"
      i: 1
      type: INT
    }
    doc_string: "/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/functional.py(126): conv3d\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/conv.py(388): forward\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/module.py(325): __call__\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/jit/__init__.py(245): forward\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/module.py(325): __call__\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/jit/__init__.py(227): trace\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/onnx/__init__.py(120): _export\nconvert_pytorch_test.py(69): convert_tests\nconvert_pytorch_test.py(102): <module>\n"
  }
  node {
    input: "3"
    input: "2"
    output: "4"
    op_type: "Add"
    attribute {
      name: "broadcast"
      i: 1
      type: INT
    }
    attribute {
      name: "axis"
      i: 1
      type: INT
    }
    doc_string: "/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/functional.py(126): conv3d\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/conv.py(388): forward\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/module.py(325): __call__\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/jit/__init__.py(245): forward\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/module.py(325): __call__\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/jit/__init__.py(227): trace\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/onnx/__init__.py(120): _export\nconvert_pytorch_test.py(69): convert_tests\nconvert_pytorch_test.py(102): <module>\n"
  }
  name: "torch-jit-export"
  initializer {
    dims: 4
    dims: 3
    dims: 2
    dims: 2
    dims: 2
    data_type: FLOAT
    name: "1"
    raw_data: "\010\215&>d\363\367=\265\014\033\276n\014\027>\020\017\000<0\200\362<J\317\023>v\226\264\275\021>\373\275\242\2350\276::+\276N\227;>\024i\030>\234\325\"\276\221r!\276\206\342\'\276p,A\276@\340K>hd$=\330\2529\276\306^H>~\3259>\22328\276\256QJ\276B63>p\215\177=u\2178\276\022\237M>\360E\006\276{\353\274\275\272d\307\275\034d\005=\226m;>\224\371\337=\001s\307\275\001U \276\024!\'>\240\364\276=\364\3346\276$h(>\0229\336\275z\204%>\036b\037>[\351\277\275\026\376\000>\000\247\327\274~\255\377\275\033\'%\276N\257\262\275@\232\006=<!\214\275L\235K>l\037\261=h\331\\=\251\273\"\276\020\234\376=,\237\335=\254\376)>T\\\235=\010%)=\n\030B>\240\330P<,\2760\276\200;Q\275\252\2014\276\360\013B=\364\205\376=\330\250$>\236\300\214\275\006\\\036>\330f@\276\302\307?\276\330@w=(\314\005=t\2307=dA\214\275\354\220/\276\320f1=\312\031\007>J\223\022><\026\026>8D\267=t\0201\276\312\0348>\000\301v=t\"D\275\2655\323\275\274W\232=\240\036\207;@C\\\275\216\rH>Z\026\377\275\300\2064=\377~\336\275 3\003<\230\023\214="
  }
  initializer {
    dims: 4
    data_type: FLOAT
    name: "2"
    raw_data: "`\241\026<\210$\257=8/+\276PV9\274"
  }
  input {
    name: "0"
    type {
      tensor_type {
        elem_type: FLOAT
        shape {
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 5
          }
          dim {
            dim_value: 5
          }
          dim {
            dim_value: 5
          }
        }
      }
    }
  }
  input {
    name: "1"
    type {
      tensor_type {
        elem_type: FLOAT
        shape {
          dim {
            dim_value: 4
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 2
          }
        }
      }
    }
  }
  input {
    name: "2"
    type {
      tensor_type {
        elem_type: FLOAT
        shape {
          dim {
            dim_value: 4
          }
        }
      }
    }
  }
  output {
    name: "4"
    type {
      tensor_type {
        elem_type: FLOAT
        shape {
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 4
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 2
          }
        }
      }
    }
  }
}
opset_import {
  version: 2
}
