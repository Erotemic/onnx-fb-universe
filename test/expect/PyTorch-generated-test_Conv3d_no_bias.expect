ir_version: 2
producer_name: "pytorch"
producer_version: "0.3"
graph {
  node {
    input: "0"
    input: "1"
    output: "3"
    op_type: "Conv"
    attribute {
      name: "kernel_shape"
      ints: 2
      ints: 3
      ints: 4
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "group"
      i: 1
      type: INT
    }
    doc_string: "/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/functional.py(126): conv3d\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/conv.py(388): forward\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/module.py(325): __call__\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/jit/__init__.py(245): forward\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/nn/modules/module.py(325): __call__\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/jit/__init__.py(227): trace\n/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/onnx/__init__.py(120): _export\nconvert_pytorch_test.py(69): convert_tests\nconvert_pytorch_test.py(102): <module>\n"
  }
  name: "torch-jit-export"
  initializer {
    dims: 4
    dims: 3
    dims: 2
    dims: 3
    dims: 4
    data_type: FLOAT
    name: "1"
    raw_data: "@\236\200:\376~E\275_)\205=\334@\215\275E\206\330=\212_B=8\\s\274g7\251\275\214o\345\275o\234\320=\240\004\263\273\271\332\353=Y\361\315=N\242j=\024\014\237\275|i\010\275\230\344E\275y\310\235\275\277V\335=~\226!=\236\330\235\275\230\0201\274\200\033\274\273(\270\347\274\232\030\022\275\310\017\002<Z\322N=\207c\315=\267\355\227=\300\364\265\275\335\311\212=Dm\246\275\267\344\353=`\210,\274i\363\324=@\010\210\275\020\216\356;\266\314(=\367S\336=\351\343\242=\"Dm\275\211\365\347=\216\266\267\275Kd\207=\245\211\251=\326\267\272\275\232+h=\237\315\222\275\256\233\333\275,\257\235\274\230\332T\275\263\251\273=\016\027\303\275#\355\272=\360\212\221\275Tn\266<H\r}\274\257\274\317\275\204f\265\275\273\014\273=\366b\037=\354\263\332<@\010\337\274d\037\252<\350\016x<\246G,\275f\252e=\030\206/<\212X7\275:\364\304\275\262\244H=\361\203\203=R\307-=\034\257\202\275?A\277\275\204W\213<\271\227\360=9\251\340\275\233\302\341\275\224\364>\275\352w\024=H\030E<*a\035\275\027\347\235=\370J\253\2750\351\237\275\310!\273\274\014+\243<\266\352@\275\"\312+=<Y\345\274\344?\260\274\253\377\334=rS0=i\377\271=\334\233\271<l\200\324<\034\320\277<\026;\235\275VZ\036=>6)\275`\023\010\274\034\303\215<g\224\262=\354\300\331<\231\311r\275\347\212\271=\004\352\354\275$R\235</\277\225=\002\320\225\275Q(\235= #\354\273J\304[=\\\263\357<\rb\353\275z\002J=H\253\000<\344\255S\275\342ka= \336)\274\230\366u<\002\317=\275p\233k\274\002\267\244\275\016\305\017\275\372n)=\330E?\274\235\211\306=T\230\236\274\300\304\257;x\362S\274\354}\036\275u\345\310=\002:&\275\220\275\323\274X\373t<\256\357==X?\273\275\332e6\2750\330$\274p\371\233\275-\244\210=\032w\017=?g\254=\307\304\333=d\234\200<\244\260\315<\324q\273\275@\277\326\272I\267\242\275sG\324=,\370\306<\366\244\302\275\261\201\256=\005[\202=5\376\211=\253,\333=\034\306\346<\273\311\207=\010\223^\274\313\017\312=\210\tp<\200y\003\272>\232\003=;\344\242=jq\214\275U\364\313=\270\340\251\275\371\313\307=\304.\010\275\024J\351\275\215\324\360=\367\031\336=2T\311\275u\304\302=\245\216\206=\230\362c<&\342(=,\302\310<\322l:=\340\274\353\275\233\\\215=\272\222\241\275o_\325\275b\274\206\275\201\274l\275\001l\360\275\216\247\337\275\356<|=\206v\300\275\256|\t=n\001_\275\263y\217=\350\247\247\274\322h==(MP\274\372\373>=\370\2213\274{H\320=e\302\320\275\233\253\337=\224\364\211\275\320\312K\275\217\274y\275\346(\263\275k\030\215=|\354\210\275O\272\310=$\345\316<\342\000\351\275\274b\234\275\344\035D\275\215\203\332\275/\325b\275\365f\344==\206\333=\222\3502\275>\"\035=\350\360\236\275^\303,\275\272\203y=4\335\331\275\314\013\223\275vX;=(U&\274\026E4=\244.\214\274nl\016\275\004&\211\275D:\355\275\013\357\346=\270L^\274\262~\340\275\352\270\001\275au\333=\246\2442\275\017\242\221=8c\250\275L\001\303<\317\343\313=\361\350\352=\304\333\347<6;\034\275><\216\275*32=\230H\301\275\006Gr=,4\312<\227\245\262=X\320G\275\230=7\275\363k\236=\250\314\014<0\2505\2746\277\314\275\236\245\332\275c*\327=S\030\340\275\276=\274\275h\034\224\275\303\317\337=X7-\275\270G\374\274\251D\260=\n*\310\275\354\341\217\275\252\270>\275\003\262r\275W\222\302=\375r\236=\265[\225=4 \250<N\031\013\275~lL=\226\2558\275\316AC=\272\027\262\275}\213\207=\205<\204=\250\024{<\000\356\362:0\200\254\275\376\0172\275^R\242\275J\377F\275~\016\343\275X\214\207\275"
  }
  input {
    name: "0"
    type {
      tensor_type {
        elem_type: FLOAT
        shape {
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 4
          }
          dim {
            dim_value: 5
          }
        }
      }
    }
  }
  input {
    name: "1"
    type {
      tensor_type {
        elem_type: FLOAT
        shape {
          dim {
            dim_value: 4
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 4
          }
        }
      }
    }
  }
  output {
    name: "3"
    type {
      tensor_type {
        elem_type: FLOAT
        shape {
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 4
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 2
          }
          dim {
            dim_value: 2
          }
        }
      }
    }
  }
}
opset_import {
  version: 2
}
